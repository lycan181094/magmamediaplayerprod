class AbstractMediaPlayer{constructor(){this._mediaPlayerList=[]}set conf(e){try{this._conf=e}catch(e){throw e}}get conf(){try{return this._conf}catch(e){throw e}}set containerMedia(e){try{this._containerMedia=e}catch(e){throw e}}get containerMedia(){try{return this._containerMedia}catch(e){throw e}}static get instance(){return AbstractMediaPlayer._instance||(AbstractMediaPlayer._instance=new this),AbstractMediaPlayer._instance}static getInstance(){return this.instance}set screen(e){try{this._screen=e}catch(e){throw e}}get screen(){try{return this._screen}catch(e){throw e}}set canvas(e){try{this._canvas=e}catch(e){throw e}}get canvas(){try{return this._canvas}catch(e){throw e}}set media(e){try{this._media=e}catch(e){throw e}}get media(){try{return this._media}catch(e){throw e}}beforeRenderedScreen(e){try{return new Promise((e,t)=>{e(!0)})}catch(e){throw e}}renderedScreen(e){try{return new Promise((e,t)=>{e(!0)})}catch(e){throw e}}afterRenderedScreen(e,t){try{return new Promise((e,r)=>{t().then(()=>{e(!0)})})}catch(e){throw e}}createMediaPlayer(e){try{return new Promise((e,t)=>{})}catch(e){throw e}}configMediaPlayer(e){}configEvents(e){}initMediaPlayer(e){}createVirtualUrl(e,t){try{return new Promise((t,r)=>{let a=[];Array.prototype.forEach.call(e.media.childNodes,e=>{let t=new Promise((t,r)=>{fetch(e.src).then(r=>{r.blob().then(r=>{e.src=URL.createObjectURL(r),URL.revokeObjectURL(e.src),t(!0)})})});a.push(t)}),Promise.all(a).then(()=>{t(!0)})})}catch(e){}}reziseScreenToWindows(){}reziseScreenToFullScreen(){}reziseExitToFullScreen(){}openFullscreen(e){let t=null;return e.requestFullscreen?t=e.requestFullscreen({navigationUI:"show"}):e.webkitRequestFullscreen?t=e.webkitRequestFullscreen({navigationUI:"show"}):e.msRequestFullscreen&&(t=e.msRequestFullscreen({navigationUI:"show"})),t}addPlayer(e){try{this._mediaPlayerList.push(e)}catch(e){throw e}}getPlayerById(e){try{return this._mediaPlayerList.find(t=>t.containerMedia.parentNode.getAttribute("id")===e)}catch(e){throw e}}getPlayersById(e=[]){try{let t=[];return e.forEach(e=>{this._mediaPlayerList.some(t=>t.containerMedia.parentNode.getAttribute("id")===e)&&t.push(this._mediaPlayerList.find(t=>t.containerMedia.parentNode.getAttribute("id")===e))}),t}catch(e){throw e}}}export default AbstractMediaPlayer;