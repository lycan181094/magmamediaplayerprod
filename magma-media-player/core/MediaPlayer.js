import AbstractMediaPlayer from"./AbstractMediaPlayer.js";import Screen from"./Screen.js";import Controls from"./Controls.js";import Canvas from"./Canvas.js";class MediaPlayer extends AbstractMediaPlayer{constructor(){super(),this.isResizeWindow=!1}set isResizeWindow(e){try{this._isResizeWindow=e}catch(e){throw e}}get isResizeWindow(){try{return this._isResizeWindow}catch(e){throw e}}beforeRenderedScreen(e,t){try{return new Promise((r,n)=>{let s=Array.prototype.find.call(e.screen.controls.elementHtmltrackHistory.childNodes,e=>"history"===e.className);e.media.onloadedmetadata=(()=>{e.media.currentTime=1e101,e.media.ontimeupdate=(()=>{e.media.currentTime=0,s.max=e.media.duration,e.screen.controls.elementHtmlDuration.innerHTML=e.screen.controls.showformatInMinutes(e.media.duration),e.media.ontimeupdate=(()=>{e.screen.controls.updateTrackbackAndTime()}),e.media.volume=.1}),t().then(()=>{r(!0)})})})}catch(e){throw e}}renderedScreen(e,t){try{return new Promise((e,r)=>{t().then(()=>{e(!0)})})}catch(e){throw e}}createMediaPlayer(e){try{return new Promise((t,r)=>{this.createMediaPlayerOne(e).then(()=>{t(!0)})})}catch(e){throw e}}createMediaPlayerContainer(e){try{return console.log("aqui2"),new Promise((t,r)=>{let n=document.querySelector("#"+e.id);console.log(n);let s=[],i=[];Array.prototype.forEach.call(n.childNodes,(e,t)=>{let r=this.getMediaPlayer(e);null!=r&&s.push(r)}),0==s.length&&t(!0),s.forEach(t=>{let r=e;r.id=t.getAttribute("id"),i.push(this.createMediaPlayerOne(r))}),Promise.all(i).then(()=>{t(!0)})})}catch(e){throw e}}getMediaPlayer(e){try{if("DIV"===e.tagName&&"media-player"===e.className)return e;for(let t of Array.from(e.childNodes)){if("DIV"===t.tagName&&"media-player"===t.className)return t;if("DIV"===t.tagName)return this.getMediaPlayer(t)}}catch(e){throw e}}createMediaPlayerOne(e){try{return new Promise((t,r)=>{let n=new MediaPlayer,s=document.querySelector("#"+e.id),i=null,l=null,o=null,c=null;n.conf=e,n.media=document.createElement("video"),this.setConfObject(e,s,n.media),this.configSources(e.sources,n.media),(i=this.configControls(n)).createControls(n.media,e),(l=this.configScreen(n)).createScreen(i),o=this.configDivMedia(n),(c=this.configCanvas(n,o)).createCanvas(),o.appendChild(c.elementHtml),o.appendChild(n.screen.elementHtml),s.appendChild(o),this.configMediaPlayer(n,e).then(()=>{MediaPlayer.getInstance().addPlayer(n),t(n.media)})})}catch(e){throw e}}configDivMedia(e){try{return e.containerMedia=document.createElement("div"),e.containerMedia.className="media",e.containerMedia}catch(e){throw e}}configControls(e){try{return new Controls(e)}catch(e){throw e}}configCanvas(e,t){try{let t=new Canvas(e);return e.canvas=t,t}catch(e){throw e}}configScreen(e){try{let t=new Screen;return e.screen=t,t}catch(e){throw e}}setConfObject(e,t,r){try{e.id=t.getAttribute("id"),e.title=t.getAttribute("data-title"),e.height=t.getAttribute("data-height"),e.width=t.getAttribute("data-width"),r.className="video",r.style.height=e.height,r.style.width=e.width,e.sources=[],Array.prototype.forEach.call(t.childNodes,r=>{"DIV"===r.tagName&&(e.sources.push({src:r.getAttribute("data-src"),type:r.getAttribute("data-type")}),t.removeChild(r))})}catch(e){throw e}}configSources(e=[],t){try{for(let r of e){let e=document.createElement("source");e.src=r.src,e.type=r.type,t.appendChild(e)}}catch(e){throw e}}configMediaPlayer(e,t){return new Promise((r,n)=>{this.configEvents(e,t).then(()=>{this.initMediaPlayer(e,t).then(()=>{this.createVirtualUrl(e,t).then(()=>{r(!0)})})})})}configEvents(e,t){return new Promise((r,n)=>{let s=null,i=null;e.screen.controls.beforePause=null==t.beforePause?()=>Promise.resolve(null):()=>new Promise((e,r)=>{t.beforePause(),e(!0)}),e.screen.controls.afterPause=null==t.afterPause?()=>Promise.resolve(null):()=>new Promise((e,r)=>{t.afterPause(),e(!0)}),e.screen.controls.beforePlay=null==t.beforePlay?()=>Promise.resolve(null):()=>new Promise((e,r)=>{t.beforePlay(),e(!0)}),e.screen.controls.afterPlay=null==t.afterPlay?()=>Promise.resolve(null):()=>new Promise((e,r)=>{t.afterPlay(),e(!0)}),i=(()=>{clearTimeout(s),e.screen.controls.elementHtmltrackHistory.style.display="block",e.screen.controls.elementHtml.style.display="block",s=setTimeout(()=>{e.screen.controls.elementHtmltrackHistory.animate([{opacity:1},{opacity:0}],500).addEventListener("finish",()=>{e.screen.controls.elementHtmltrackHistory.style.display="none"}),e.screen.controls.elementHtml.animate([{opacity:1},{opacity:0}],500).addEventListener("finish",()=>{e.screen.controls.elementHtml.style.display="none"}),clearTimeout(s)},3e3)}),e.screen.elementHtml.addEventListener("mouseenter",()=>{i()}),e.screen.elementHtml.addEventListener("mousemove",()=>{i()}),e.media.addEventListener("play",function(){t.beforePlay&&e.screen.controls.beforePlay().then(()=>null),t.play&&t.play(),t.afterPlay&&e.screen.controls.afterPlay().then(()=>null),e.canvas.timerCallback()},!1),e.media.addEventListener("pause",function(){t.beforePause&&e.screen.controls.beforePause().then(()=>null),t.pause&&t.pause(),t.afterPause&&e.screen.controls.afterPause().then(()=>null)},!1),e.screen.elementHtml.ondblclick=(()=>this.onFullscreen(e)),e.screen.controls.elementBtnFullScreen.onclick=(()=>this.onFullscreen(e)),window.addEventListener("resize",()=>{e.isResizeWindow?e.canvas.resizeCanvas():e.canvas.resizeCanvasToScreen()}),e.screen.elementHtml.onclick=(()=>{e.media.paused?e.screen.controls.onPlay():e.screen.controls.onPause()}),r(!0)})}initMediaPlayer(e,t){return new Promise((r,n)=>{e.beforeRenderedScreen(e,null==t.beforeRenderedScreen?()=>Promise.resolve():()=>new Promise((e,r)=>{t.beforeRenderedScreen(),e(!0)})).then(()=>{e.renderedScreen(e,null==t.renderedScreen?()=>Promise.resolve():()=>new Promise((e,r)=>{t.renderedScreen(),e(!0)})).then(()=>{this.afterRenderedScreen(e,null==t.afterRenderedScreen?()=>Promise.resolve():()=>new Promise((e,r)=>{t.afterRenderedScreen(),e(!0)})).then(()=>{r(!0)})})}),r(!0)})}reziseScreenToWindows(){try{this.isResizeWindow?(this.isResizeWindow=!1,this.media.style.height=this.conf.height,this.media.style.width=this.conf.width,this.screen.elementHtml.style.height=this.conf.height,this.screen.elementHtml.style.width=this.conf.width,this.screen.controls.elementHtmltrackHistory.style.width=this.conf.width,this.screen.controls.configureLeftBtnFullScreen(),this.canvas.resizeCanvas()):(this.isResizeWindow=!0,this.media.style.height="99vh",this.media.style.width="98vw",this.screen.elementHtml.style.height="99vh",this.screen.elementHtml.style.width="98vw",this.screen.controls.elementHtmltrackHistory.style.width="98vw",this.screen.controls.configureLeftBtnInFullScreen(),this.canvas.resizeCanvasToScreen()),this.screen.controls.setTopControls(),this.screen.controls.setTopHistory()}catch(e){throw e}}reziseScreenToFullScreen(){try{this.screen.controls.elementBtnResize.style.display="none",this.screen.controls.elementBtnFullScreen.style.marginLeft="calc(170%  - 100vw)",this.media.style.height="100vh",this.media.style.width="100vw",this.screen.elementHtml.style.height="100vh",this.screen.elementHtml.style.width="100vw",this.screen.controls.elementHtmltrackHistory.style.width="100vw",this.screen.controls.configureLeftBtnInFullScreen(),this.canvas.resizeCanvasToScreen(),this.screen.controls.setTopControls(),this.screen.controls.setTopHistory()}catch(e){throw e}}reziseExitToFullScreen(){try{this.screen.controls.elementBtnResize.style.display="inline-block",this.screen.controls.elementBtnFullScreen.style.marginLeft="25px",this.isResizeWindow=!1,this.media.style.height=this.conf.height,this.media.style.width=this.conf.width,this.screen.elementHtml.style.height=this.conf.height,this.screen.elementHtml.style.width=this.conf.width,this.screen.controls.elementHtmltrackHistory.style.width=this.conf.width,this.screen.controls.configureLeftBtnFullScreen(),this.canvas.resizeCanvas(),this.screen.controls.setTopControls(),this.screen.controls.setTopHistory()}catch(e){throw e}}onFullscreen(e){try{document.fullscreenElement?document.exitFullscreen().then(()=>{e.reziseExitToFullScreen()}):e.openFullscreen(e.containerMedia).then(()=>{e.reziseScreenToFullScreen()})}catch(e){throw e}}}export default MediaPlayer;